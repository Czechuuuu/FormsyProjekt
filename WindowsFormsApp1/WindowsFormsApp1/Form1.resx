<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAvCAYAAAChd5n0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAABH1JREFUaEPtmQlTIkEMhff//xfv+74vEEFRUMQLtbxvRUEgy9eQrREGagZ6xN3a
        V5UadhZm8jp5Sbr9Jf8I/hP5afg2IqVSqfopGPwn8tPwLUSIRrFYNBYUAiGC45+fn5LNZuXq6kqSyaSs
        rKxIJBKR4+NjeXx8lFwuJ4VCofqL9mGNCI6/vr7Kzc2N7O/vy/r6ukxNTcnIyIgMDg5Kf3+/DAwMyNDQ
        kIyNjcni4qJsb2/L2dmZIfb+/l4XMT+6aosIK3p/fy+pVErC4bDMzMwYp/v6+ozhfCPT72Cjo6NfiEHK
        b3Fom8jd3Z3s7u6a1GGl3ZxuZESIK1Gam5uTtbU1OTg4MCmpRLwSsppal5eXMjs7W+dwrWm0uEKCSLy9
        vcnHx0fLurEqdjRCitQ63sh6e3tleHhY0um0IfD8/PwlGn5glQi5vbGxYVJMBa7m1ARGWkECXVHJIEKF
        Q/j+iZTsEqHqoBlWeGtryxQAIjQ+Pm5SCMenp6dldXVVotGoJBIJOT09NVEAXEmvjkcEB0gP+gYl+OTk
        xKw2VQ2nuY+YuX94eGiKxPn5ecu6cMI6kUwmY8opEZicnJT5+XmTbpDY2dkx0SCdNP3oN2irXVgnwmpD
        BCFjPT09RiMQw/QeV+5Tcp+enqpPaB1WiQBKMJFA0G5C13sYESFaPy4iAMHG43FTlWodx5z36DlohB7U
        LqwTAVQu5iwngVrTRmiDBLCuEZDP52Vzc9Osfm1kdCyBKH3DFgKJCIQuLi5M/1ACTlNtQNgWAiEC6PKU
        WqqTMyJ8pqrRCK2hnAiBESH36exaZp1E6CFEzCYCI0L1WlpaqiOCsdmiw9uEdbGTUogYDVCZ1HkVuRoz
        F2MKQ2JHyq9WJsCQyD6CXd3e3p7ZkzOSMBx2d3e7ElBT7dA82ZTReyB2e3trioDzPV7QUkR4CWMFEy4r
        i+M4hfOMH3yGQCMSTuP7+ju+j35ISYqBn6rmmYiuEFfSYXl52ThSW5W8mv7GecV4HkZaMkF7TTvfEWGV
        6MjqkHPVWyHkZjyTCNGHONzwAt9E0MTCwsIfp72kT6sGGfYzTUGi+O0jpBViZKVsrb6b8WwWqKurS2Kx
        WPONV7Um+CJClUKEKm43J2waEUH4nEo2RoWJbyKUSIT4HUQQPbtJ3dPXAxJFUsU7EdKKELP/1tNEt5fb
        NIhMTEwYXTZGCxGBCAcGvOS7iDDOeNlB+ooIqUUXp2nRxHiRmwPNrNEC1JZxno1G2NM310gFviICOHfi
        gCEUCpmw81JeyIuxViLFb5zOo0FGHfoVE4Q242bwFREFKUbeXl9fy9HRkdkN0umZm/SEUR1TcrWm94kE
        +xP274z9pC5Rf3h4MJHwQgL4jogTWgB4IcRYPfoMJZrTxkQiWSYZN8NkKBQuOxqRaDRmVjqVSpcjmzGn
        Ljj98vJSnpyzZiQhhb0SqMDykSlQcjiE5fMFM9ZANpfj3/my8X/F8vcqf47z57QbAiDSKQRCRFe4/ZX2
        jkBSqxP4y1OLReMPqB3QiN2IKZGS/AYDiqRopb+BCQAAAABJRU5ErkJggg==
</value>
  </data>
</root>